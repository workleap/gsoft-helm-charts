suite: comprehensive aspnetcore chart tests
templates:
  - deployment.yaml
  - poddisruptionbudget.yaml
  - service.yaml
  - ingress.yaml
  - deployment-hpa.yaml
  - prechecks.yaml
tests:
  # =============================================================================
  # PodDisruptionBudget Tests
  # =============================================================================
  - it: PDB should not be created when replicaCount=1 (default)
    template: poddisruptionbudget.yaml
    set:
      replicaCount: 1
    asserts:
      - hasDocuments:
          count: 0

  - it: PDB should be created when replicaCount>1
    template: poddisruptionbudget.yaml
    set:
      replicaCount: 2
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: metadata.name
          value: RELEASE-NAME-pdb

  # =============================================================================
  # Prechecks / Validation Logic Tests
  # =============================================================================
  - it: should fail when autoscaling enabled but minReplicas missing
    template: prechecks.yaml
    set:
      autoscaling:
        enabled: true
        minReplicas: null
    asserts:
      - failedTemplate:
          errorMessage: "autoscaling.minReplicas is required"

  - it: should fail when minReplicas equals minAvailable (deadlock)
    template: prechecks.yaml
    set:
      autoscaling:
        enabled: true
        minReplicas: 2
      podDisruptionBudget:
        minAvailable: 2
    asserts:
      - failedTemplate:
          errorMessage: "autoscaling.minReplicas cannot be less than podDisruptionBudget.minAvailable"

  - it: should pass with valid autoscaling configuration
    template: prechecks.yaml
    set:
      autoscaling:
        enabled: true
        minReplicas: 3
      podDisruptionBudget:
        minAvailable: 1
    asserts:
      - hasDocuments:
          count: 0

  # =============================================================================
  # Positive Test Cases
  # =============================================================================
  - it: should render deployment successfully with default values
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-deployment

  - it: should render service successfully
    template: service.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.ports[0].port
          value: 80

  - it: should create HPA when autoscaling is enabled
    template: deployment-hpa.yaml
    set:
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 5
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: HorizontalPodAutoscaler
      - equal:
          path: spec.minReplicas
          value: 2
      - equal:
          path: spec.maxReplicas
          value: 5

  - it: should not create HPA when autoscaling is disabled
    template: deployment-hpa.yaml
    set:
      autoscaling:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should pass with valid environment value
    template: deployment.yaml
    set:
      environment: "Production"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment

  - it: should pass with valid extraEnvVars
    template: deployment.yaml
    set:
      extraEnvVars:
        - name: "TEST_VAR"
          value: "test"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
